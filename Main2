/**
 * Creates a Google Calender with event for each meeting session in the 
 * spreadsheet.
 */
const email = Session.getActiveUser().getEmail();
const ss = SpreadsheetApp.getActiveSpreadsheet();
const sheet = ss.getActiveSheet();
function create_calender() {
  //Set-up the spread sheet information.
  var range = sheet.getDataRange();
  var values = range.getValues();
  set_up_calender(values,range);
}

//Set-up the calender.
function set_up_calender(values, range){
  var cal = CalendarApp.createCalendar("基本情報技術者試験勉強会");
  var calid = cal.getId();
  sheet.getRange("I2").setValue(calid);
  for (var i = 1; i < values.length; i++) {
    var session = values[i];
    var title = session[0];
    var start = joinDateAndTime_(session[1], session[2]);
    var end = joinDateAndTime_(session[1], session[3]);
    var options = {location: session[4], description:session[5],sendInvites:true};
    var event = cal.createEvent(title, start,end,options)
        .setGuestsCanSeeGuests(false);
    //get event ID.
    session[7] = event.getId();
    var id = session[7];
    cal.getEventSeriesById(id).addGuest(email);
  }
}

//Delete and re-create the calender.
function delete_recreate_calender(){
  //Open ss.
  var range = sheet.getDataRange();
  var values = range.getValues();
  const calenderid = sheet.getRange("I2").getValue();
  var calender = CalendarApp.getCalendarById(calenderid);
  const start = new Date("2021/07/01");
  const end = new Date("2021/12/01");
  var events = calender.getEvents(start,end);
  for(let event of events){
    Logger.log(event.getTitle())
    event.removeGuest(email);
  }
  create_calender();
  /**Get id of each event.
  for (var i = 1; i < values.length; i++) {
    var session = values[i];
    //get event ID.
    var eventid ="";
    var event = calender.getEventById(eventid);
    event.removeGuest(email);
  var calender = CalendarApp.getCalendarById(calenderid);
  */
  //create_calender();
}

/**
 * Creates a single Date object from separate date and time cells.
 *
 * @param {Date} date A Date object from which to extract the date.
 * @param {Date} time A Date object from which to extract the time.
 * @return {Date} A Date object representing the combined date and time.
 */
function joinDateAndTime_(date, time) {
  date = new Date(date);
  date.setHours(time.getHours());
  date.setMinutes(time.getMinutes());
  return date;
}
